% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_mixture_profile.R
\name{plot_mixture_profile}
\alias{plot_mixture_profile}
\title{Plot mixture‐model item‐response profiles}
\usage{
plot_mixture_profile(
  models,
  model_labels = NULL,
  select = NULL,
  param_order = NULL,
  param_rename = NULL,
  prob_category = 2,
  param_exclude = NULL,
  return_data = FALSE
)
}
\arguments{
\item{models}{A single MplusAutomation model object or a list of such objects.}

\item{model_labels}{Optional character vector of labels for each model (e.g.
"3 Classes"). If NULL, labels will be auto‐generated from the number of
classes in each model.}

\item{select}{Integer indices or names of models to keep. NULL (default)
retains all models.}

\item{param_order}{Optional character vector specifying the desired order
of the parameters on the x‐axis. If NULL and `param_rename` is provided,
the new names will be used in the order they appear in `param_rename`.}

\item{param_rename}{Optional named character vector for recoding parameter
names, e.g. `c(oldName = "New Name")`. The order of values here will be
used as the default `param_order` if not otherwise specified.}

\item{prob_category}{Integer specifying which category to extract from
`parameters$probability.scale` (defaults to 2).}

\item{param_exclude}{Optional character vector of parameter names to drop
(e.g. `c("DAYS_GAP")`).}

\item{return_data}{Logical; if TRUE returns the processed data frame instead
of plotting (default FALSE).}
}
\value{
A `ggplot` object showing item‐response profiles across latent
  profiles, or (if `return_data = TRUE`) a data frame with columns:
  `Model`, `Profiles`, `label`, `param`, and `est`.
}
\description{
Extracts conditional means and/or response probabilities from one or more
MplusAutomation model objects and produces a ggplot2 profile plot across
latent profiles.
}
\examples{
# 1. Load the pre‐read model objects you saved in data/lpa_res.RData
data(lpa_res)

# 1. Multi‐model plot (auto‐generated "3 Classes", "4 Classes", etc.)
plot_mixture_profile(models = lpa_res)

# 2. Reorder parameters on the x‐axis to X9–X1
plot_mixture_profile(
  models      = lpa_res,
  param_order = paste0("X", 9:1)
)

# 3. Rename X1–X9 to more descriptive labels
rename_map <- setNames(
  paste("Indicator", 1:9),
  paste0("X", 1:9)
)
plot_mixture_profile(
  models       = lpa_res,
  param_rename = rename_map
)

# 4. Single‐model plot: legend will show "Class 1 (xx.xx\%)", etc.
plot_mixture_profile(models = lpa_res$lpa_3c.out)

# 5. Return data rather than a plot object
plot_mixture_profile(models = lpa_res$lpa_3c.out, return_data = T)

}
