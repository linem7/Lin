% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gg_prf.R
\name{gg_prf}
\alias{gg_prf}
\title{Plot Person Response Functions (PRFs) for the most (in)consistent respondents}
\usage{
gg_prf(
  X,
  method = c("nonpar", "par"),
  pfs = NULL,
  direction = c("worse", "good"),
  n_cases = 10,
  h = 0.09,
  N.FPts = 101,
  IP = NULL,
  Ability = NULL,
  facet_ncol = 5
)
}
\arguments{
\item{X}{Respondent × item data (0/1/`NA`) as matrix or data.frame.}

\item{method}{`"nonpar"` (default) or `"par"`. Sets the default `pfs`.}

\item{pfs}{`"Ht"` or `"lz"`. If `NULL`, uses `"Ht"` for `nonpar`, `"lz"` for `par`.}

\item{direction}{`"worse"` (lowest PFS first) or `"good"` (highest first).}

\item{n_cases}{Number of persons to display (default 10).}

\item{h}{Bandwidth for PRF smoothing (passed to `PerFit::PRFplot()`; default .09).}

\item{N.FPts}{Number of evaluation points in \[0,1\] (default 101).}

\item{IP}{Optional item parameter matrix for `lz` (e.g., columns `a`, `b`, `g`).}

\item{Ability}{Optional ability vector for `lz` (length `nrow(X)`).}

\item{facet_ncol}{Columns in `facet_wrap()` (default 5).}
}
\value{
A list with:
* `plot` — a `ggplot` PRF panel.
* `data` — tibble with columns `x` (grid), `id` (row index of `X`), `prf`.
* `id` — integer vector of selected row indices.
* `raw` — raw 0/1 rows for those `id`s (`orig_id` column + items).
}
\description{
Rank persons by a person-fit statistic (PFS) and draw their smoothed
person response functions (PRFs) with `ggplot2` (one facet per person).
Supports nonparametric `Ht` and parametric `lz` (requires item parameters
and/or abilities).
}
\details{
**Workflow.**
1) Validate `X` (must be 0/1/`NA`).
2) Compute PFS (`Ht` or `lz`) on all rows.
3) If PFS fails or yields `NA`s, drop rows with *effective perfect* scores
   (all observed 1s or all observed 0s) or with < 2 observed items and recompute.
4) Select `n_cases` highest/lowest per `direction`, build PRFs via `PerFit::PRFplot()`,
   evaluate on an equally spaced grid in \[0,1\], and facet with `ggplot2`.

**X-axis meaning (how to read PRFs).**
- The PRF x-axis is a **standardized item difficulty rank** in \[0,1\].
- Let \(p_j = \Pr(\text{correct on item } j)\) computed as the empirical proportion
  correct (ignoring `NA`). Items are **ordered by increasing \(p_j\)** (hard → easy).
- If an item’s rank among \(J\) items is \(r \in \{1,\dots,J\}\), its standardized
  position is \(x = (r-1)/(J-1)\). Thus **x=0 ≈ hardest** items; **x=1 ≈ easiest**.
- Ties in \(p_j\) receive averaged ranks; the PRF is then **smoothed** over this
  rank axis (controlled by `h` and `N.FPts`).
- This x-axis construction is used for the PRF regardless of whether you ranked
  persons via `Ht` or `lz`; the **method only affects which persons are shown**, not
  how the PRF x-axis is defined.

**Y-axis meaning.**
- The y-axis is the **smoothed probability of a correct response** across the
  difficulty-ranked items. A more monotone increasing curve signals response
  patterns consistent with item difficulty; dips/oscillations suggest local
  inconsistencies.

**Interpretation tips.**
- Left side (x≈0): hardest items; right side (x≈1): easiest.
- **Steeper rise** indicates more consistent improvement from hard to easy items.
- **Dips** at intermediate x suggest unexpected misses on relatively easier items.
- The **area under the PRF** roughly tracks a person’s overall raw score (higher
  area ↔ more correct responses), but PRFs are primarily for visual **consistency**,
  not score estimation.

**Parametric (`lz`).**
- Provide `IP` and/or `Ability`. A convenient route is to fit a 1-factor model with
  **mirt** and pass `IP = coef(fit, IRTpars = TRUE, simplify = TRUE)$items[, c("a","b","g")]`
  (use `g = 0` for 2PL). `Ability` can be omitted—`PerFit::lz()` will estimate abilities if needed.
}
\examples{
# --- Nonparametric (Ht): quick demo on PerFit's data -----------------------
data(PerFit::InadequacyData)
res_ht <- gg_prf(PerFit::InadequacyData, method = "nonpar", pfs = "Ht",
                 n_cases = 9, facet_ncol = 3)
print(res_ht$plot)
head(res_ht$data)
res_ht$id
head(res_ht$raw)

# --- Parametric (lz) via mirt: obtain IP (and optionally Ability) ----------
if (requireNamespace("mirt", quietly = TRUE)) {
  library(mirt)
  X <- PerFit::InadequacyData
  # Fit a unidimensional model (2PL by default)
  fit <- mirt(X, 1)

  # Item parameters in IRT metric; use columns a, b, g (g=0 under 2PL)
  ip <- coef(fit, IRTpars = TRUE, simplify = TRUE, digits = Inf)$items[, c("a","b","g")]

  # Optional abilities (EAP); 'lz' can estimate abilities if you omit this
  th <- fscores(fit, method = "EAP")[, 1]

  res_lz <- gg_prf(X, method = "par", pfs = "lz",
                   IP = as.matrix(ip), Ability = as.numeric(th),
                   n_cases = 6, facet_ncol = 3)
  print(res_lz$plot)
}

}
\seealso{
[PerFit::Ht()], [PerFit::lz()], [PerFit::PRFplot()], [mirt::mirt()]
}
