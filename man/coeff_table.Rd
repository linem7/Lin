% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coeff_table.R
\name{coeff_table}
\alias{coeff_table}
\title{Generate a Regression Coefficient Table with Fit Indices}
\usage{
coeff_table(
  ...,
  stat = c("est", "se", "p"),
  indices = character(0),
  digits_coeff = 3,
  digits_fit = 3,
  standardized = FALSE,
  params = c("regression"),
  model_names = NULL,
  stars = FALSE,
  title = "Table X. Unstandardized Regression Coefficients and Model Fit Indices.",
  notes = "Unstandardized coefficients are reported.",
  exclude = character(0),
  order_by = c("lhs", "rhs")
)
}
\arguments{
\item{...}{One or more model objects or nested lists of model objects from the
\pkg{MpluAutomation} package.}

\item{stat}{Character vector specifying which statistics to include. The default is
\code{c("est", "se", "p")}. Valid options include \code{"est"}, \code{"se"}, \code{"p"}, and \code{"z"}.
Setting \code{stat = "all"} will include all four statistics: \code{"est"}, \code{"se"}, \code{"z"}, and \code{"p"}.}

\item{indices}{Additional names of model fit indices to include.}

\item{digits_coeff}{Integer specifying the number of decimal places for coefficient values (default: 3).}

\item{digits_fit}{Integer specifying the number of decimal places for fit indices (default: 3).}

\item{standardized}{Logical; if \code{TRUE}, standardized coefficients (from \code{stdyx.standardized}) are used,
otherwise unstandardized coefficients are used (default: \code{FALSE}).}

\item{params}{Character vector indicating which parameter types to include (default: \code{c("regression")}).}

\item{model_names}{Optional character vector providing names for the models. If \code{NULL}, names are extracted
from the model's summary information (e.g., from \code{Filename}) or default names are assigned.}

\item{stars}{Logical; if \code{TRUE}, significance stars are appended to coefficient estimates based on p-value thresholds.}

\item{title}{Character string for the table caption (default: \code{"Table X. Unstandardized Regression Coefficients and Model Fit Indices."}).}

\item{notes}{Character string note to be added as a table footnote (default: \code{"Unstandardized coefficients are reported."}).}

\item{exclude}{Character vector of substrings; any rows containing these substrings in the right-hand side (RHS)
of the model equation will be excluded.}

\item{order_by}{Character value (\code{"lhs"} or \code{"rhs"}) indicating whether to order the rows by the left-hand
side or right-hand side of the equation (default: \code{"lhs"}).}
}
\value{
A formatted table (using \code{knitr::kable} and \code{kableExtra}) displaying the regression coefficients,
corresponding significance levels (with optional star markings), and model fit indices.
}
\description{
This function generates a formatted table displaying regression coefficients and model fit indices
for one or multiple model objects. These model objects are typically created by the
\pkg{MpluAutomation} package, for example via the \code{readModels()} function or as lists returned
by the \code{extractModelSummaries()} function. The output table is formatted using
\code{knitr::kable} and enhanced with \code{kableExtra} functions.
}
\details{
The function is designed to work with model objects produced by the \pkg{MpluAutomation} package. It supports:

\itemize{
  \item{\strong{Single model objects:} Directly pass a model created by \code{readModels()}.}
  \item{\strong{Complex model lists:} Pass a list of models, such as those returned by \code{extractModelSummaries()}.}
  \item{\strong{Combined input:} Mix individual model objects and nested lists of models. The function flattens the input
        for consistent processing.}
}

Internally, helper functions such as \code{fmt_num()}, \code{classify_param()}, and
\code{create_formula_parts()} (which should be imported or defined in your environment) are used to format numbers,
classify parameters, and construct equation parts respectively.
}
\examples{
\dontrun{
# Example 1: Single model object from MpluAutomation
model_single <- readModels("model_file.out")
coeff_table(model_single)

# Example 2: Complex model list returned by extractModelSummaries
model_list <- extractModelSummaries("models_directory")
coeff_table(model_list)

# Example 3: Combined input with an individual model and a nested model list
model_extra <- readModels("another_model.out")
models_combined <- list(model_set = extractModelSummaries("other_models_folder"))
coeff_table(model_extra, models_combined)
}

}
\seealso{
\code{\link{readModels}}, \code{\link{extractModelSummaries}}, \code{knitr::kable}, \code{kableExtra::kable_classic}
}
