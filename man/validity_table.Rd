% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validity_table.R
\name{validity_table}
\alias{validity_table}
\title{Generate Comparative Tables of lavaan Model Fit Indices}
\usage{
validity_table(
  ...,
  data = NULL,
  model_names = NULL,
  indices = c("chisq", "df", "cfi", "tli", "rmsea", "srmr"),
  changes = c("cfi", "rmsea"),
  ref = c("first", "last"),
  digits = 3,
  show_estimator_info = FALSE
)
}
\arguments{
\item{...}{Either fitted lavaan objects (from \code{cfa()}, \code{sem()}, etc.)
or character strings containing lavaan model syntax. Can also accept a
single list of models. Model names are automatically extracted from
variable names or can be specified via named arguments.}

\item{data}{A data frame containing the variables for model fitting. Required
when providing model specifications as character strings; ignored when
providing pre-fitted lavaan objects.}

\item{model_names}{Character vector of custom model names. If \code{NULL}
(default), names are extracted from function call arguments or variable names.}

\item{indices}{Character vector specifying which fit indices to include.
Default is \code{c("chisq", "df", "cfi", "tli", "rmsea", "srmr")}.
A χ²/df column is automatically added when possible.}

\item{changes}{Character vector specifying which indices to compute delta
(change) values for. Default is \code{c("cfi", "rmsea")}.}

\item{ref}{Character string specifying the reference model for delta
calculations. Options are:
\itemize{
  \item \code{"first"} (default): All models compared to the first model
  \item \code{"last"}: Sequential comparison (each model vs. previous model)
}}

\item{digits}{Integer specifying the number of decimal places for rounding.
Default is 3.}
}
\value{
A data frame containing model comparison results with columns:
  \itemize{
    \item \code{Model}: Model names (extracted or provided)
    \item \code{Estimator}: Estimation method used (ML, MLR, etc.)
    \item Fit indices as specified in \code{indices} parameter
    \item \code{χ²/df}: Chi-square to degrees of freedom ratio
    \item Delta columns (e.g., \code{ΔCFI}, \code{ΔRMSEA}) showing changes
          relative to reference model
  }

  The returned object includes these attributes:
  \itemize{
    \item \code{measure_names_used}: Named list showing which specific fit
          measures were used for each model (e.g., "cfi.robust" vs "cfi")
    \item \code{estimator_families}: Character vector indicating estimator
          family ("robust", "ml", or "unknown") for each model
    \item \code{original_indices}: The \code{indices} argument used
    \item \code{original_changes}: The \code{changes} argument used
    \item \code{reference_type}: The \code{ref} argument used
  }
}
\description{
Creates publication-ready tables comparing fit indices across multiple
structural equation models fitted with lavaan. Accepts either pre-fitted
lavaan objects or model specifications that will be automatically fitted
using confirmatory factor analysis (CFA). Automatically selects appropriate
fit measures based on estimator type and provides delta (change) columns
for model comparison.
}
\details{
The function automatically selects the most appropriate fit measures based on
the estimator used. For robust estimators (MLR, MLM, WLSMV, etc.), it
prioritizes robust or scaled versions of fit indices when available.

**Delta Calculation Logic:**
\itemize{
  \item \code{ref = "first"}: Δ values show difference from first model
        (Model 1 gets NA, others show Model_i - Model_1)
  \item \code{ref = "last"}: Δ values show difference from immediately
        previous model (Model 1 gets NA, Model 2 shows Model_2 - Model_1,
        Model 3 shows Model_3 - Model_2, etc.)
}

**Model Name Extraction:**
Names are determined in this priority order:
\enumerate{
  \item Explicit \code{model_names} argument
  \item Named arguments (e.g., \code{validity_table("My Model" = fit)})
  \item Variable names from function call (e.g., \code{fm_t1} becomes "fm_t1")
  \item Fallback to "Model i"
}
}
\examples{
\donttest{
library(lavaan)
data("HolzingerSwineford1939")

# Define model specifications
model_3f <- '
  visual  =~ x1 + x2 + x3
  textual =~ x4 + x5 + x6
  speed   =~ x7 + x8 + x9
'

model_3f_orth <- '
  visual  =~ x1 + x2 + x3
  textual =~ x4 + x5 + x6
  speed   =~ x7 + x8 + x9
  visual  ~~ 0*textual
  visual  ~~ 0*speed
  textual ~~ 0*speed
'

model_1f <- '
  general =~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
'

# Example 1: Using pre-fitted lavaan objects
# Variable names (fit_3f, fit_1f, etc.) become model names
fit_3f <- cfa(model_3f, data = HolzingerSwineford1939)
fit_3f_orth <- cfa(model_3f_orth, data = HolzingerSwineford1939)
fit_1f <- cfa(model_1f, data = HolzingerSwineford1939)

result1 <- validity_table(fit_3f, fit_3f_orth, fit_1f, digits = 3)
print(result1)

# Example 2: Using model specifications (automatic fitting)
result2 <- validity_table(model_3f, model_3f_orth, model_1f,
                         data = HolzingerSwineford1939,
                         model_names = c("3F Correlated", "3F Orthogonal", "1F"),
                         digits = 3)
print(result2)

# Example 3: Sequential comparison (each model vs. previous)
result3 <- validity_table(fit_3f, fit_3f_orth, fit_1f,
                         ref = "last",  # Sequential comparison
                         digits = 3)
print(result3)

# Example 4: Using named arguments for custom model labels
result4 <- validity_table(
  "Three Factor" = fit_3f,
  "Orthogonal" = fit_3f_orth,
  "Single Factor" = fit_1f,
  digits = 3
)
print(result4)

# Example 5: Custom fit indices and changes
result5 <- validity_table(fit_3f, fit_3f_orth, fit_1f,
                         indices = c("chisq", "df", "cfi", "tli", "rmsea", "srmr", "aic"),
                         changes = c("cfi", "rmsea", "aic"),
                         digits = 3)
print(result5)

# Example 6: Measurement invariance testing
# (Sequential comparison is particularly useful here)
configural <- '
  visual  =~ x1 + x2 + x3
  textual =~ x4 + x5 + x6
  speed   =~ x7 + x8 + x9
'

metric <- '
  visual  =~ a*x1 + b*x2 + c*x3
  textual =~ d*x4 + e*x5 + f*x6
  speed   =~ g*x7 + h*x8 + i*x9
'

fit_config <- cfa(configural, data = HolzingerSwineford1939)
fit_metric <- cfa(metric, data = HolzingerSwineford1939)

invariance_test <- validity_table(fit_config, fit_metric,
                                 model_names = c("Configural", "Metric"),
                                 ref = "last",  # Compare metric to configural
                                 digits = 3)
print(invariance_test)

# Inspect which specific fit measures were used
attr(invariance_test, "measure_names_used")
}

}
\seealso{
\code{\link[lavaan]{cfa}}, \code{\link[lavaan]{sem}},
\code{\link[lavaan]{fitmeasures}}, \code{\link[lavaan]{lavInspect}}
}
