% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sem_perms_lavaan.R
\name{sem_perms_lavaan}
\alias{sem_perms_lavaan}
\title{sem_perms_lavaan: Run permutation-based SEM/CFA using lavaan}
\usage{
sem_perms_lavaan(
  data,
  latent_defs,
  roles = c("x", "m1", "m2", "y"),
  covariate = NULL,
  extra_var = NULL,
  exclusion = NULL,
  fix = NULL,
  structural_tpl,
  minimal_run = TRUE,
  max_run = 50,
  parameters = NULL,
  missing = "fiml",
  estimator = "ML",
  digits = 3
)
}
\arguments{
\item{data}{A data.frame containing the observed manifest variables.}

\item{latent_defs}{A named list of lavaan measurement strings, e.g.:
list(
  x  = "x =~ x1 + x2 + x3",
  m1 = "m1 =~ m11 + m12 + m13",
  m2 = "m2 =~ m21 + m22 + m23 + m24 + m25",
  y  = "y =~ y1 + y2 + y3 + y4"
)
Each name corresponds to a factor label; these labels are permuted across `roles`.}

\item{roles}{Character vector of factor names to permute, e.g. `c("x","m1","m2","y")`.}

\item{covariate}{Character vector of observed covariates to include in every model.}

\item{extra_var}{Character vector of additional observed variables to include.}

\item{exclusion}{List of character vectors; factors in each inner vector will not co-occur.}

\item{fix}{Named list: names are positions in `roles`, values are allowed factor names.}

\item{structural_tpl}{A glue template for the structural part. Use single braces for placeholders matching `roles`, plus `{cov}` and `{extra}`.
e.g.: `{y} ~ a*{x} + b*{m1} + d*{m2}{cov}{extra}\nind := a * b`}

\item{minimal_run}{Logical; if `TRUE`, only the first `max_run` permutations are run (quick check).}

\item{max_run}{Integer; number of permutations to run when `minimal_run = TRUE`.}

\item{parameters}{Character vector of parameter labels (e.g., `c("a","ind")`) for p-value extraction.}

\item{missing}{lavaan missing-data method (default: "fiml").}

\item{estimator}{lavaan estimator (default: "ML").}

\item{digits}{Decimal places for fit indices & p-values (default: 3).}
}
\value{
A data.frame with one row per permutation:
  * `Model`: permutation label (e.g. "m1_m2_x_y")
  * `χ²(df)`, `χ²/df`, `CFI`, `TLI`, `RMSEA`, `SRMR`, `AIC`, `BIC`
  * one column per entry in `parameters` with p-values
  * `Error`: factor (Yes/No) if lavaan parsing/fitting failed
  * `Warning`: factor (Yes/No) if lavaan produced a warning during fitting
}
\description{
This function mirrors the functionality of a permutation SEM pipeline previously built
with MplusAutomation, but implements everything in R via lavaan. It systematically
permutes the assignment of measurement models (latent factors) to roles and extracts
fit indices and specified parameter p-values for each permutation.
}
\examples{
# Example 1: common list format (no helper function)
latent_defs <- list(
  x  = "x =~ x1 + x2 + x3",
  m1 = "m1 =~ m11 + m12 + m13",
  m2 = "m2 =~ m21 + m22 + m23 + m24 + m25",
  y  = "y =~ y1 + y2 + y3 + y4"
)
result_list <- sem_perms_lavaan(
  data           = latent_data,
  latent_defs    = latent_defs,
  roles          = c("x","m1","m2","y"),
  structural_tpl = "{y} ~ a*{x} + b*{m1} + d*{m2}{cov}{extra}",
  minimal_run    = TRUE,
  max_run        = 3,
  parameters     = c("a","b"),
  covariate      = c("age"),
  extra_var      = c("gender")
)

# Example 2: using create_cfa_model helper
latent_defs2 <- list(
  x  = create_cfa_model("x",  "x{i}", 1:3),
  m1 = create_cfa_model("m1", "m1{i}", 1:3),
  m2 = create_cfa_model("m2", "m2{i}", 1:5),
  y  = create_cfa_model("y",  "y{i}", 1:4)
)
result_helper <- sem_perms_lavaan(
  data           = latent_data,
  latent_defs    = latent_defs2,
  roles          = c("x","m1","m2","y"),
  structural_tpl = "{y} ~ a*{x} + b*{m1} + d*{m2}{cov}{extra}
  ind := a * b",
  minimal_run    = TRUE,
  max_run        = 3,
  parameters     = c("a","ind"),
  covariate      = c("age","gender"),
  extra_var      = c("z1","z2","z3")
)
}
